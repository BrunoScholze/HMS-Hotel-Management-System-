/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, Input, HostBinding, Output, EventEmitter } from '@angular/core';
import { ViewStateService } from '../view-state.service';
import { FocusableDirective } from '../../navigation/focusable.directive';
import { ButtonComponent } from '@progress/kendo-angular-buttons';
import { NgFor, NgClass } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../view-state.service";
/**
 * @hidden
 */
export class ViewFooterComponent {
    constructor(viewState) {
        this.hostClasses = true;
        this.toolbarRole = 'toolbar';
        /**
         * @hidden
         * TODO: Drop in next MAJOR version
         */
        this.inlineJustifyContentStyle = 'start';
        this.itemClick = new EventEmitter();
        this.sub = viewState.toggleWorkHours.subscribe(() => this.itemClick.emit());
    }
    ngOnDestroy() {
        // eslint-disable-next-line no-unused-expressions
        this.sub && this.sub.unsubscribe();
    }
    onItemClick(e, item) {
        e.preventDefault();
        this.itemClick.emit(item);
    }
}
ViewFooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: ViewFooterComponent, deps: [{ token: i1.ViewStateService }], target: i0.ɵɵFactoryTarget.Component });
ViewFooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: ViewFooterComponent, isStandalone: true, selector: "[viewFooter]", inputs: { items: "items" }, outputs: { itemClick: "itemClick" }, host: { properties: { "class.k-scheduler-footer": "this.hostClasses", "class.k-toolbar": "this.hostClasses", "class.k-toolbar-md": "this.hostClasses", "attr.role": "this.toolbarRole", "style.justify-content": "this.inlineJustifyContentStyle" } }, ngImport: i0, template: `
        <span class="k-scheduler-navigation">
            <button
                *ngFor="let item of items"
                type="button"
                kendoButton
                [icon]="item.fontIcon"
                [svgIcon]="item.svgIcon"
                [ngClass]="item.cssClass"
                (click)="onItemClick($event, item)"
                [kendoSchedulerFocusIndex]="0"
                containerType='footer'>
                <span class="k-button-text">{{ item.text }}</span>
            </button>
        </span>
    `, isInline: true, dependencies: [{ kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: ButtonComponent, selector: "button[kendoButton], span[kendoButton], kendo-button", inputs: ["arrowIcon", "toggleable", "togglable", "selected", "tabIndex", "imageUrl", "iconClass", "icon", "disabled", "size", "rounded", "fillMode", "themeColor", "svgIcon", "role", "primary", "look"], outputs: ["selectedChange", "click"], exportAs: ["kendoButton"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: FocusableDirective, selector: "[kendoSchedulerFocusIndex]", inputs: ["kendoSchedulerFocusIndex", "containerType"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: ViewFooterComponent, decorators: [{
            type: Component,
            args: [{
                    // eslint-disable-next-line @angular-eslint/component-selector
                    selector: '[viewFooter]',
                    template: `
        <span class="k-scheduler-navigation">
            <button
                *ngFor="let item of items"
                type="button"
                kendoButton
                [icon]="item.fontIcon"
                [svgIcon]="item.svgIcon"
                [ngClass]="item.cssClass"
                (click)="onItemClick($event, item)"
                [kendoSchedulerFocusIndex]="0"
                containerType='footer'>
                <span class="k-button-text">{{ item.text }}</span>
            </button>
        </span>
    `,
                    standalone: true,
                    imports: [NgFor, ButtonComponent, NgClass, FocusableDirective]
                }]
        }], ctorParameters: function () { return [{ type: i1.ViewStateService }]; }, propDecorators: { hostClasses: [{
                type: HostBinding,
                args: ['class.k-scheduler-footer']
            }, {
                type: HostBinding,
                args: ['class.k-toolbar']
            }, {
                type: HostBinding,
                args: ['class.k-toolbar-md']
            }], toolbarRole: [{
                type: HostBinding,
                args: ['attr.role']
            }], inlineJustifyContentStyle: [{
                type: HostBinding,
                args: ['style.justify-content']
            }], itemClick: [{
                type: Output
            }], items: [{
                type: Input
            }] } });
