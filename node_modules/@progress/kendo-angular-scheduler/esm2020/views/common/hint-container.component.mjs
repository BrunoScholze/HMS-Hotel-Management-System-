/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, ChangeDetectorRef, ContentChild, TemplateRef } from '@angular/core';
import { NgTemplateOutlet } from '@angular/common';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export class HintContainerComponent {
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
        this.changeDetector.detach();
    }
    detectChanges() {
        this.changeDetector.detectChanges();
    }
}
HintContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: HintContainerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
HintContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: HintContainerComponent, isStandalone: true, selector: "kendo-hint-container", queries: [{ propertyName: "hintTemplate", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `
        <ng-container [ngTemplateOutlet]="hintTemplate">
        </ng-container>
    `, isInline: true, dependencies: [{ kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: HintContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'kendo-hint-container',
                    template: `
        <ng-container [ngTemplateOutlet]="hintTemplate">
        </ng-container>
    `,
                    standalone: true,
                    imports: [NgTemplateOutlet]
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { hintTemplate: [{
                type: ContentChild,
                args: [TemplateRef, { static: false }]
            }] } });
