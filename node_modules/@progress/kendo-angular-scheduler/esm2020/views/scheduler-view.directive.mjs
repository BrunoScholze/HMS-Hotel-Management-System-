/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, forwardRef, Input, TemplateRef } from '@angular/core';
import { SchedulerView } from '../types';
import * as i0 from "@angular/core";
// eslint-disable no-input-rename
/**
 * A directive selector for a custom Scheduler view.
 */
export class SchedulerViewDirective extends SchedulerView {
    constructor(template) {
        super();
        this.template = template;
    }
    /**
     * The invariant name for this view. For example, `day`.
     * If not set, the name will be the same as the title.
     */
    get name() {
        return this._name || this.title;
    }
    set name(value) {
        this._name = value;
    }
}
SchedulerViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: SchedulerViewDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
SchedulerViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.10", type: SchedulerViewDirective, isStandalone: true, selector: "[kendoSchedulerView]", inputs: { title: ["kendoSchedulerView", "title"], name: ["kendoSchedulerViewName", "name"] }, providers: [{
            provide: SchedulerView,
            useExisting: forwardRef(() => SchedulerViewDirective)
        }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: SchedulerViewDirective, decorators: [{
            type: Directive,
            args: [{
                    providers: [{
                            provide: SchedulerView,
                            useExisting: forwardRef(() => SchedulerViewDirective)
                        }],
                    selector: '[kendoSchedulerView]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { title: [{
                type: Input,
                args: ['kendoSchedulerView']
            }], name: [{
                type: Input,
                args: ['kendoSchedulerViewName']
            }] } });
