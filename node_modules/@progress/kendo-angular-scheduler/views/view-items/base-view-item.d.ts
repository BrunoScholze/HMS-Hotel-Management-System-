/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnInit, OnChanges, OnDestroy, Renderer2, TemplateRef } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { BaseSlotService } from './base-slot.service';
import { Rect, ViewItem } from './types';
import { FocusService } from '../../navigation';
import { SVGIcon } from '@progress/kendo-svg-icons';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class BaseViewItem implements OnInit, OnChanges, OnDestroy, ViewItem {
    protected slotService: BaseSlotService;
    protected localization: LocalizationService;
    protected focusService: FocusService;
    protected element: ElementRef;
    protected renderer: Renderer2;
    protected localeId: string;
    item: any;
    resourceIndex: number;
    rangeIndex: number;
    index: number;
    eventTemplate: TemplateRef<any>;
    editable: any;
    dragHint: boolean;
    resources: any[];
    className: boolean;
    get taskIndex(): string;
    get touchAction(): string;
    get eventTitle(): string;
    get deleteMessage(): string;
    get resizable(): boolean;
    get removable(): boolean;
    caretAltLeftIcon: SVGIcon;
    caretAltRightIcon: SVGIcon;
    rect: Rect;
    private subs;
    constructor(slotService: BaseSlotService, localization: LocalizationService, focusService: FocusService, element: ElementRef, renderer: Renderer2, localeId: string);
    get isRecurrence(): boolean;
    get isRecurrenceException(): boolean;
    get nativeElement(): any;
    setStyles(styles: any): void;
    toggle(visible: boolean): void;
    reflow(): void;
    ngOnInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    get arrowIcons(): string[];
    get arrowSVGIcons(): SVGIcon[];
    static ɵfac: i0.ɵɵFactoryDeclaration<BaseViewItem, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BaseViewItem, never, never, { "item": "item"; "resourceIndex": "resourceIndex"; "rangeIndex": "rangeIndex"; "index": "index"; "eventTemplate": "eventTemplate"; "editable": "editable"; "dragHint": "dragHint"; "resources": "resources"; }, {}, never, never, false, never>;
}
