/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgZone, QueryList, ElementRef, Renderer2, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { IntlService } from '@progress/kendo-angular-intl';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ScrollbarWidthService } from '@progress/kendo-angular-common';
import { Subject } from 'rxjs';
import { DateRange, ViewItem } from '../../types';
import { ViewContextService } from '../view-context.service';
import { ViewStateService } from '../view-state.service';
import { DayTimeSlotService } from '../day-time/day-time-slot.service';
import { SchedulerTask } from '../common/scheduler-task';
import { DayTimeViewComponent } from '../day-time/day-time-view.component';
import { HintContainerComponent } from '../common/hint-container.component';
import { PDFService } from '../../pdf/pdf.service';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class MultiDayViewRendererComponent extends DayTimeViewComponent {
    allDaySlot: boolean;
    name: string;
    slotFill: number;
    allDaySlotTemplate: TemplateRef<any>;
    allDayEventTemplate: TemplateRef<any>;
    dayCells: QueryList<ElementRef>;
    headerHintContainer: HintContainerComponent;
    dateFormat: any;
    allDayResizeHintFormat: any;
    allDayItems: Subject<SchedulerTask[]>;
    get allDaySlotTemplateRef(): TemplateRef<any>;
    get allDayEventTemplateRef(): TemplateRef<any>;
    get allDayMessage(): string;
    get allDayResizeHint(): boolean;
    get allDayDragHint(): boolean;
    private schedulerAllDaySlotTemplate;
    private schedulerAllDayEventTemplate;
    private dragContainers;
    constructor(localization: LocalizationService, viewContext: ViewContextService, viewState: ViewStateService, intl: IntlService, slotService: DayTimeSlotService, zone: NgZone, renderer: Renderer2, element: ElementRef, changeDetector: ChangeDetectorRef, pdfService: PDFService, scrollbarWidthService: ScrollbarWidthService);
    protected optionsChange(changes: any): void;
    ngOnChanges(changes: any): void;
    horizontalColspan(resourceIndex: number): any;
    verticalRowspan(resourceIndex: number): any;
    allDaySlotClass(slot: any, resourceIndex: any): string;
    protected createTasks(items: ViewItem[], dateRange: DateRange): any[];
    protected onTasksChange(): void;
    protected reflow(): void;
    protected dragHorizontal(slot: any): boolean;
    protected updateHintContainer(): void;
    protected onRelease(args: any): void;
    protected updateDragContainer(args: any): void;
    protected containerByPosition({ x, y }: any): any;
    protected get containers(): any[];
    protected scrollContainer(callback: any, args: any): void;
    protected dragRanges(slot: any): any;
    protected dragHintEventStyleArgs(): any;
    protected draggedIsAllDay(task: any, slot: any): boolean;
    protected dragHintSize(firstSlot: any, lastSlot: any): any;
    protected currentTimeArrowOffset(): number;
    isMiddleSlot(index: any): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<MultiDayViewRendererComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MultiDayViewRendererComponent, "multi-day-view", never, { "allDaySlot": "allDaySlot"; "name": "name"; "slotFill": "slotFill"; "allDaySlotTemplate": "allDaySlotTemplate"; "allDayEventTemplate": "allDayEventTemplate"; }, {}, never, never, true, never>;
}
