/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { SchedulerComponent } from './scheduler.component';
import { DateRange, SchedulerEvent } from './types';
import { LocalDataChangesService } from './editing/local-data-changes.service';
import { IntlService } from '@progress/kendo-angular-intl';
import * as i0 from "@angular/core";
/**
 * A directive that processes Scheduler events in-memory ([see example](slug:databinding_scheduler#toc-using-the-built-in-directive)).
 *
 * Processing includes the expanding of recurring events and the filtering of data for
 * the currently active period.
 */
export declare class DataBindingDirective implements OnInit, OnDestroy {
    protected scheduler: SchedulerComponent;
    protected changeDetector: ChangeDetectorRef;
    protected intl: IntlService;
    protected localDataChangesService?: LocalDataChangesService;
    /**
     * The array of data which will populate the Scheduler.
     */
    set data(value: any[]);
    protected dateRange: DateRange;
    protected originalData: any[];
    private subscription;
    private dataChangedSubscription;
    constructor(scheduler: SchedulerComponent, changeDetector: ChangeDetectorRef, intl: IntlService, localDataChangesService?: LocalDataChangesService);
    /**
     * @hidden
     */
    ngOnInit(): void;
    /**
     * @hidden
     */
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    rebind(): void;
    protected process(): SchedulerEvent[];
    private onDateChange;
    static ɵfac: i0.ɵɵFactoryDeclaration<DataBindingDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DataBindingDirective, "[kendoSchedulerBinding]", never, { "data": "kendoSchedulerBinding"; }, {}, never, never, true, never>;
}
