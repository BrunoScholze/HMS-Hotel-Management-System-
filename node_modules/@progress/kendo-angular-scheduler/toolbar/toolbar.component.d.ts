/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, EventEmitter, NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { DateRange } from '../types';
import { NavigationAction } from '../types';
import { SchedulerView } from '../types';
import { ToolbarTemplateDirective } from './toolbar-template.directive';
import { ToolbarService } from './toolbar.service';
import { CalendarView } from '@progress/kendo-angular-dateinputs';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class ToolbarComponent {
    private service;
    private element;
    private zone;
    hostClasses: boolean;
    toolbarRole: string;
    selectedView: SchedulerView;
    views: SchedulerView[];
    dateRange: Observable<DateRange>;
    selectedDate: Observable<Date>;
    template: ToolbarTemplateDirective;
    min: Date;
    max: Date;
    navigate: EventEmitter<NavigationAction>;
    toolbarWidthChange: EventEmitter<number>;
    templateContext: any;
    toolbarWidth: number;
    /**
     * @hidden
     */
    get activeView(): CalendarView;
    /**
     * @hidden
     */
    get bottomView(): CalendarView;
    private subs;
    constructor(service: ToolbarService, element: ElementRef, zone: NgZone);
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    resizeHandler(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ToolbarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ToolbarComponent, "kendo-scheduler-toolbar", never, { "selectedView": "selectedView"; "views": "views"; "dateRange": "dateRange"; "selectedDate": "selectedDate"; "template": "template"; "min": "min"; "max": "max"; }, { "navigate": "navigate"; "toolbarWidthChange": "toolbarWidthChange"; }, never, never, true, never>;
}
